#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Conventional Commits pattern
conventional_pattern="^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .{1,50}$"

# Check if message matches conventional commits pattern
if ! echo "$commit_msg" | grep -Eq "$conventional_pattern"; then
  echo "Error: Commit message does not follow Conventional Commits format."
  echo "Format: type(scope): description"
  echo ""
  echo "Valid types:"
  echo "  feat     - A new feature"
  echo "  fix      - A bug fix"
  echo "  docs     - Documentation changes"
  echo "  style    - Code style changes (formatting, etc)"
  echo "  refactor - Code refactoring"
  echo "  perf     - Performance improvements"
  echo "  test     - Adding or updating tests"
  echo "  build    - Build system changes"
  echo "  ci       - CI configuration changes"
  echo "  chore    - Other changes"
  echo "  revert   - Reverting changes"
  echo ""
  echo "Example: feat(auth): add password reset functionality"
  exit 1
fi

# Check description length (should be between 10 and 50 chars)
description=$(echo "$commit_msg" | sed -E 's/^[^:]+: //')
if [ ${#description} -lt 10 ] || [ ${#description} -gt 50 ]; then
  echo "Error: Commit message description should be between 10 and 50 characters."
  echo "Current length: ${#description}"
  exit 1
fi

# Check for imperative mood (simple check for common past tense words)
if echo "$description" | grep -Eq "\b(added|fixed|updated|removed|changed|implemented)\b"; then
  echo "Error: Please use imperative mood in commit message (e.g., 'add' instead of 'added')"
  exit 1
fi 