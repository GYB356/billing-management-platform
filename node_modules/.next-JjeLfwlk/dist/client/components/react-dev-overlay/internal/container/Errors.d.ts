<<<<<<< HEAD
import * as React from 'react';
import type { UnhandledErrorAction, UnhandledRejectionAction } from '../error-overlay-reducer';
=======
import { type UnhandledErrorAction, type UnhandledRejectionAction } from '../../shared';
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f
import type { VersionInfo } from '../../../../../server/dev/parse-version-info';
export type SupportedErrorEvent = {
    id: number;
    event: UnhandledErrorAction | UnhandledRejectionAction;
};
export type ErrorsProps = {
<<<<<<< HEAD
=======
    isAppDir: boolean;
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f
    errors: SupportedErrorEvent[];
    initialDisplayState: DisplayState;
    versionInfo?: VersionInfo;
};
type DisplayState = 'minimized' | 'fullscreen' | 'hidden';
<<<<<<< HEAD
export declare const Errors: React.FC<ErrorsProps>;
=======
export declare function Errors({ isAppDir, errors, initialDisplayState, versionInfo, }: ErrorsProps): import("react/jsx-runtime").JSX.Element | null;
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f
export declare const styles: string;
export {};
