import type { Metadata, ResolvedMetadata } from './metadata-interface';
export type FieldResolver<Key extends keyof Data & keyof ResolvedData, Data = Metadata, ResolvedData = ResolvedMetadata> = (T: Data[Key]) => ResolvedData[Key];
export type FieldResolverExtraArgs<Key extends keyof Data & keyof ResolvedData, ExtraArgs extends unknown[] = any[], Data = Metadata, ResolvedData = ResolvedMetadata> = (T: Data[Key], ...args: ExtraArgs) => ResolvedData[Key];
export type MetadataContext = {
    pathname: string;
<<<<<<< HEAD
=======
    trailingSlash: boolean;
    isStandaloneMode: boolean;
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f
};
