// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                  String         @id @default(cuid())
  name                String?
  email               String         @unique
  emailVerified       DateTime?
  image               String?
  password_hash       String?
  stripeCustomerId    String?
  subscription_status String?        @default("free")
  referralCode        String         @unique @default(cuid())
  referralDiscount    Boolean        @default(false)
  referralCount       Int            @default(0)
  referralRewards     Int            @default(0)
  accounts            Account[]
  sessions            Session[]
  subscriptions       Subscription[]
  referrals           Referral[]     @relation("Referrer")
  referredBy          Referral[]     @relation("Referred")
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String
  user                 User     @relation(fields: [userId], references: [id])
  stripeCustomerId     String?
  stripeSubscriptionId String?  @unique
  planName             String
  status               String
  currentPeriodStart   DateTime
  currentPeriodEnd     DateTime
  cancelAtPeriodEnd    Boolean  @default(false)
  lastPaymentStatus    String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([userId])
  @@index([stripeCustomerId])
  @@index([stripeSubscriptionId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Referral {
  id         String   @id @default(cuid())
  referrerId String
  referredId String
  status     String   @default("pending") // pending, completed, failed
  referrer   User     @relation("Referrer", fields: [referrerId], references: [id])
  referred   User     @relation("Referred", fields: [referredId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([referrerId, referredId])
}
