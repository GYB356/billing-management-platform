<<<<<<< HEAD
import { Component, ComponentChild, ComponentChildren } from '../../src';
=======
// Intentionally not using a relative path to take advantage of
// the TS version resolution mechanism
import { Component, ComponentChild, ComponentChildren } from 'preact';
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f

//
// Suspense/lazy
// -----------------------------------
<<<<<<< HEAD
export function lazy<T>(loader: () => Promise<{ default: T } | T>): T;
=======
export function lazy<T>(
	loader: () => Promise<{ default: T } | T>
): T extends { default: infer U } ? U : T;
>>>>>>> 4f9d35bd5c5bf095848f6fc99f7e7bfe5212365f

export interface SuspenseProps {
	children?: ComponentChildren;
	fallback: ComponentChildren;
}

export class Suspense extends Component<SuspenseProps> {
	render(): ComponentChild;
}
