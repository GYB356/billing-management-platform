generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User and Authentication
model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  twoFactorEnabled Boolean  @default(false)
  
  // Relationships
  organizations   UserOrganization[]
  subscriptions   Subscription[]
  preferences     UserPreference?
  auditLogs       AuditLog[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Organization {
  id              String   @id @default(cuid())
  name            String
  taxId           String?
  email           String?
  phone           String?
  address         Json?
  
  // Billing related
  stripeCustomerId String?  @unique
  subscriptions    Subscription[]
  invoices         Invoice[]
  
  // Relationships
  users           UserOrganization[]
  portalConfig    CustomerPortalConfig?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Subscription and Billing
model Subscription {
  id                  String   @id @default(cuid())
  organizationId      String
  planId             String
  status             String
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean  @default(false)
  trialEndsAt        DateTime?
  
  // Stripe related
  stripeSubscriptionId String? @unique
  
  // Relationships
  organization        Organization @relation(fields: [organizationId], references: [id])
  plan                Plan        @relation(fields: [planId], references: [id])
  invoices            Invoice[]
  usageRecords        UsageRecord[]
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
}

model Plan {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  currency    String   @default("USD")
  interval    String   // monthly, yearly
  features    Json?    // Array of included features
  
  // Relationships
  subscriptions Subscription[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Analytics and Reporting
model AnalyticsData {
  id          String   @id @default(cuid())
  period      DateTime
  metrics     Json     // MRR, ARR, churn rate, etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([period])
}

// Notification System
model NotificationTemplate {
  id          String   @id @default(cuid())
  name        String
  type        String
  channels    Json     // email, sms, in-app
  content     Json
  variables   Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
