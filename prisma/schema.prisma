// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Existing models
model User {
  id          String   @id @default(cuid())
  name        String?
  email       String   @unique
  password    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // ...existing fields...
}

// New models added for billing platform
model Organization {
  id              String   @id @default(cuid())
  name            String
  email           String?
  stripeCustomerId String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  // ...relationships...
}

model Subscription {
  id                 String   @id @default(cuid())
  organizationId     String
  planId             String
  status             String
  stripeSubscriptionId String?
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean  @default(false)
  trialEndsAt        DateTime?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  // ...relationships...
}

model Plan {
  id           String   @id @default(cuid())
  name         String
  description  String?
  price        Float
  currency     String   @default("USD")
  interval     String   @default("month")
  stripePriceId String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  // ...relationships...
}

model Invoice {
  id             String   @id @default(cuid())
  organizationId String
  amount         Float
  currency       String   @default("USD")
  status         String
  stripeInvoiceId String?
  pdfUrl         String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // ...relationships...
}

model UsageRecord {
  id             String   @id @default(cuid())
  subscriptionId String
  featureId      String
  quantity       Float
  timestamp      DateTime @default(now())
  // ...relationships...
}

model Report {
  id          String   @id @default(cuid())
  type        String
  format      String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String
  downloadUrl String?
  metadata    Json?
}

model Metric {
  id        String   @id @default(cuid())
  name      String
  value     Float
  timestamp DateTime @default(now())
  tags      Json?
}

model EmailNotification {
  id        String    @id @default(cuid())
  type      String
  status    String
  to        String
  subject   String
  body      String
  sentAt    DateTime?
  createdAt DateTime  @default(now())
  metadata  Json?
}

model Webhook {
  id            String   @id @default(cuid())
  organizationId String
  url           String
  events        String[]
  secret        String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model WebhookDelivery {
  id         String   @id @default(cuid())
  webhookId  String
  payload    Json
  status     String
  statusCode Int?
  response   String?
  error      String?
  retries    Int      @default(0)
  createdAt  DateTime @default(now())
}

// Additional models can be added here
